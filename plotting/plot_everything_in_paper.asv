%% This script is for printing result
clear
clc
clf
close all
%% 3.2: Common network comparison (CommonGrangerNet, convex CommonGrangerNet, JSS, Magda Gregorova)
resource_path = './experiment/result_to_plot/';
table_head = {'CGN','cvxCGN','Song','Greg'};
row_name = {'F1','FPR','TPR','ACC','MCC'};
load([resource_path,'formulation_C_eBICresult'])
result.CGN = R;
load([resource_path,'formulation_C_cvx_eBICresult'])
result.cvxCGN = R;
load(['G:\My Drive\0FROM_SHARED_DRIVE\THESIS\formulation_C_magda\adaptive_formulation_C_JSS_result.mat'])
result.Song = R;
load([resource_path,'magda_result'])
result.Greg = R;
M = zeros(5,4,2);
STD = zeros(5,4,2);
summary = zeros(5,4,2,100);
for jj=1:length(table_head)
    for ii=1:length(row_name)
        for dd=1:2
            if  jj~=4
            M(ii,jj,dd) = mean(result.(table_head{jj}).common.(row_name{ii})(dd,:));
            STD(ii,jj,dd) = std(result.(table_head{jj}).common.(row_name{ii})(dd,:));
            summary(ii,jj,dd,:) = result.(table_head{jj}).common.(row_name{ii})(dd,:);
            else
                M(ii,jj,dd) = mean(result.(table_head{jj}).(row_name{ii})(dd,:));
            STD(ii,jj,dd) = std(result.(table_head{jj}).(row_name{ii})(dd,:));
            summary(ii,jj,dd,:) = result.(table_head{jj}).(row_name{ii})(dd,:);
            end
        end
    end
end

% table
printtable([M(:,:,1)*100 M(:,:,2)*100],[STD(:,:,1)*100 STD(:,:,2)*100],{table_head{:},table_head{:}},row_name)

tt = tiledlayout(2,2);
tt.TileSpacing = 'compact';
tt.Padding = 'compact';
nexttile;
ARR = zeros(100,4);
for ii=1:length(row_name)
for dd=1:2

    for jj=1:length(table_head)
    ARR(:,jj) = summary(ii,jj,dd,:);
end

end

%% 3.3 A

%% 3.3 B

%% 3.4

%% 3.5